function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import merge from 'lodash.merge';
import React, { PureComponent } from 'react';
import { getParams } from "../../utils/index.js";
export class Particles extends PureComponent {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "getParticles", () => {
      if (this.props.withDefaults) {
        return merge({}, getParams(), this.props.params);
      } else {
        return this.props.params;
      }
    });
  }

  componentDidMount() {
    require('particles.js');

    var w = window;

    if ('particlesJS' in w) {
      w.particlesJS(this.props.id, this.getParticles());
    }
  }

  componentDidUpdate(prevProps) {
    var w = window;

    if ('particlesJS' in w && prevProps.id !== this.props.id && prevProps.params !== this.props.params) {
      w.particlesJS(this.props.id, this.getParticles());
    }
  }

  componentWillUnmount() {
    var w = window;

    if ('pJSDom' in w && w.pJSDom instanceof Array && w.pJSDom.length > 0) {
      w.pJSDom.forEach(({
        pJS
      }) => pJS && pJS.fn.vendors.destroypJS());
      w.pJSDom = [];
    }
  }

  render() {
    const {
      className,
      style,
      width,
      height,
      id
    } = this.props;
    return React.createElement("div", {
      id: id,
      className: className,
      style: _objectSpread({}, style, {
        width: width,
        height: height
      })
    });
  }

}

_defineProperty(Particles, "displayName", 'Particles');

_defineProperty(Particles, "defaultProps", {
  style: {},
  width: 'auto',
  height: '100vh',
  id: 'particles-js',
  withDefaults: true
});

export default Particles;